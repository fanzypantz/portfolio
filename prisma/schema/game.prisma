enum GameStatus {
  waiting
  playing
  finished
}

model Game {
  id String @id @default(cuid())

  startedAt  DateTime?
  finishedAt DateTime?
  status     GameStatus @default(waiting)

  lobbyId String @unique
  lobby   Lobby  @relation(fields: [lobbyId], references: [id])

  ownerId String @unique
  owner   User   @relation(name: "gameOwner", fields: [ownerId], references: [id])

  winnerId String?
  winner   User?   @relation(name: "gameWinner", fields: [winnerId], references: [id])

  pieces GamePiece[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model GamePiece {
  id Int @id @default(autoincrement())

  xPos  Int
  yPos  Int
  type  String
  color String

  gameId String @unique
  game   Game   @relation(fields: [gameId], references: [id])

  gameMoves GameMove[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model GameMove {
  id Int @id @default(autoincrement())

  pieceId Int       @unique
  piece   GamePiece @relation(fields: [pieceId], references: [id])

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  xStart Int
  yStart Int

  xEnd Int
  yEnd Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
